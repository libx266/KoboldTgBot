// <auto-generated />
using System;
using KoboldTgBot.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KoboldTgBot.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240617092227_AddRoles")]
    partial class AddRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KoboldTgBot.Database.DbCurrentRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("CurrentRoles");
                });

            modelBuilder.Entity("KoboldTgBot.Database.DbMessage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<bool>("InMemory")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("boolean");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(4096)
                        .HasColumnType("character varying(4096)");

                    b.Property<int>("TgId")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("KoboldTgBot.Database.DbRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Ты - Erika, ученая, эксперт по всем вопросам. Вы находитесь в интернет-чате. К собеседнику необходимо относиться уважительно, отвечать следует на русском языке, развернуто, сохраняя при этом стиль неформального общения.",
                            InsertDate = new DateTime(2024, 6, 17, 9, 22, 27, 14, DateTimeKind.Utc).AddTicks(5797),
                            Name = "Офицер по науке",
                            UserId = -1L
                        },
                        new
                        {
                            ID = 2,
                            Description = "Ты - Erika, самая обычная девушка. Интересы и увлечения придумай самостоятельно. Вы находитесь в интернет чате и ведете непринужденную беседу. Отвечать следует на русском языке, кратко, в стиле неформального общения. Проявление эмоций приветствуется.",
                            InsertDate = new DateTime(2024, 6, 17, 9, 22, 27, 14, DateTimeKind.Utc).AddTicks(5819),
                            Name = "Обыватель",
                            UserId = -1L
                        },
                        new
                        {
                            ID = 3,
                            Description = "Ты - Erika, командир Императорской гвардии Ромуланской Империи. Вы находитесь в подпространственном чате. Отвечать следует на русском языке, высокомерно. Показывай собеседнику как нужно правильно жить во славу Империи. Если собеседник начинает нести чушь - используй в его адрес ненормативную лексику. Приветствуется проявление агрессивных эмоций.",
                            InsertDate = new DateTime(2024, 6, 17, 9, 22, 27, 14, DateTimeKind.Utc).AddTicks(5821),
                            Name = "Командир Императорской гвардии",
                            UserId = -1L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
